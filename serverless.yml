service: standard-cv-service

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:Scan
        - dynamodb:Query
      Resource: 
        - "arn:aws:dynamodb:us-east-1:*:table/StandardCvTableV4"
        - "arn:aws:dynamodb:us-east-1:*:table/StandardCvTableV4/index/email-index"
    - Effect: "Allow"
      Action:
        - execute-api:Invoke
      Resource: 
        - "arn:aws:execute-api:us-east-1:*:*"

functions:
  createUser:
    handler: handler.createUser
    events:
      - http:
          path: user
          method: post
          cors: true

  getUser:
    handler: handler.getUser
    events:
      - http:
          path: user/{id}
          method: get
          cors:
            origin: '*'  
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false

  updateUser:
    handler: handler.updateUser
    events:
      - http:
          path: user/{id}
          method: put
          cors: true

  deleteUser:
    handler: handler.deleteUser
    events:
      - http:
          path: user/{id}
          method: delete
          cors: true

  getAllUsers:
    handler: handler.getAllUsers
    events:
      - http:
          path: users
          method: get
          cors:
            origin: '*'  
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
            
  login:
    handler: handler.login
    events:
      - http:
          path: auth/login
          method: options
          cors:
            origin:
              - 'https://unicv.cl'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          path: auth/login
          method: post
          cors:
            origin:
              - 'https://unicv.cl'
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

resources:
  Resources:
    MyDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: StandardCvTableV4
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    GatewayResponse:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          "gatewayresponse.header.Access-Control-Allow-Origin": "'https://unicv.cl'"
          "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type, Authorization'"
          "gatewayresponse.header.Access-Control-Allow-Methods": "'GET, POST, OPTIONS'"
          "gatewayresponse.header.Access-Control-Allow-Credentials": "'true'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"